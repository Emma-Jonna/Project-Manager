@{
    ViewData["Title"] = "UpdateProject";
}
@model EditProject;

<section class="update-project-page">
    <secion class="update-project-wrapper">
        <section class="update-project-container">
            <h3>UpdateProject</h3>

            <form class="update-project-form" method="post" asp-controller="Project" asp-action="UpdateProjectInfo" enctype="multipart/form-data">
                <label class="form-name">
                    <h4>Name</h4>
                    <input name="Project.Name" value="@Model.Project.Name" />
                </label>

                <label class="form-category">
                    <h4>Project Category</h4>
                    <select name="Project.CategoryId">
                        @foreach (var item in Model.Category)
                        {
                            if (item.Id == Model.Project.CategoryId)
                            {
                                <option value="@item.Id" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }

                        }
                    </select>
                </label>

                <label class="form-type">
                    <h4>Project Type</h4>
                    <select name="Project.TypeId">
                        @foreach (var item in Model.Type)
                        {
                            if (item.Id == Model.Project.TypeId)
                            {
                                <option value="@item.Id" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }

                        }
                    </select>
                </label>

                <label class="form-status">
                    <h4>Project Status</h4>
                    <select name="Project.StatusId">
                        @foreach (var item in Model.Status)
                        {
                            if (item.Id == Model.Project.StatusId)
                            {
                                <option value="@item.Id" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }

                        }
                    </select>
                </label>

                <label class="form-description">
                    <h4>Description</h4>
                    <textarea name="Project.Description" rows="10" cols="60">@Model.Project.Description</textarea>
                </label>

                <label>
                    @{
                        var index = 0;
                        var materials = Model.Material.ToList();
                    }
                    <h4>Material List</h4>
                    <ul class="materials-list">

                        @for (int i = 0; i < materials.Count(); i++)
                        {
                            <li id="list-@i" class="material-container">
                                <input name="Material[@i].Id" value="@materials[i].Id" class="material-id" hidden />
                                <input type="text" name="Material[@i].Name" class="material-name" value="@materials[i].Name" />
                                <input type="text" name="Material[@i].Amount" class="material-amount" value="@materials[i].Amount" />

                                @if (materials[i].Acquired == true)
                                {
                                    <input type="checkbox" name="Material[@i].Acquired" class="material-checkbox" checked value="true" />
                                }
                                else if (materials[i].Acquired != true)
                                {
                                    <input type="checkbox" name="Material[@i].Acquired" class="material-checkbox" value="false" />
                                }
                                <div id="@i" class="delete-button-container default-list-item-button">
                                    <p id="@i">Delete</p>
                                </div>
                            </li>
                        }

                        @{
                            index++;
                        }

                    </ul>
                    <div class="add-material-button"><p>Add Material</p></div>
                </label>

                <label class="form-date">
                    <h4>Start date</h4>
                    <input type="date" name="Project.StartDate" value="@(Model.Project.StartDate.HasValue ? @Model.Project.StartDate.Value.ToString("yyyy-MM-dd") : "" )" />
                </label>

                <label class="form-date">
                    <h4>End date</h4>
                    <input type="date" name="Project.EndDate" value="@(Model.Project.EndDate.HasValue ? @Model.Project.EndDate.Value.ToString("yyyy-MM-dd") : "" )" />
                </label>

                <label class="before-image-container">
                    <h4>Before Image</h4>
                    @{
                        if (File.Exists(Model.Project.BeforeImage))
                        {
                            var beforeImageData = $"https://localhost:7006/Project/ConvertFileToImageSource?filename={Model.Project.BeforeImage}";

                            <img src="@beforeImageData" class="before-image-preview project-image" />
                        }
                        else
                        {
                            <img src="~/lib/icons/noImage.svg" class="before-image-preview project-image" />
                        }
                    }
                    <img src="" hidden class="before-image-preview" />
                    <input id="BeforeImageFile" type="file" name="BeforeImageFile" accept=".jpg, jpeg, .png" class="image-preview" />
                </label>

                <label class="after-image-container">
                    <h4>After Image</h4>
                    @{
                        if (File.Exists(Model.Project.AfterImage))
                        {
                            var afterImageData = $"https://localhost:7006/Project/ConvertFileToImageSource?filename={Model.Project.AfterImage}";

                            <img src="@afterImageData" class="after-image-preview project-image" />
                        }
                        else
                        {
                            <img src="~/lib/icons/noImage.svg" class="after-image-preview project-image" />
                        }
                    }
                    <input id="AfterImageFile" type="file" name="AfterImageFile" accept=".jpg, jpeg, .png" class="image-preview" />
                </label>

                <label class="sketch-image-container">
                    <h4>Sketch</h4>
                    @{
                        if (File.Exists(Model.Project.Sketch))
                        {
                            var sketchImageData = $"https://localhost:7006/Project/ConvertFileToImageSource?filename={Model.Project.Sketch}";

                            <img src="@sketchImageData" class="sketch-image-preview project-image" />
                        }
                        else
                        {
                            <img src="~/lib/icons/noImage.svg" class="sketch-image-preview project-image" />
                        }
                    }
                    <input id="SketchImageFile" type="file" name="SketchImageFile" accept=".jpg, jpeg, .png" class="image-preview" />
                </label>

                <label class="pattern-container">
                    <h4>Pattern Link</h4>
                    <input id="PatternFile" type="file" name="PatternFile" accept="application/pdf" />
                </label>

                <input name="Project.Id" value="@Model.Project.Id" hidden />
                <div>
                    <button class="save-project-changes-button" type="submit">Save Changes</button>
                </div>
            </form>
        </section>

        <a class="go-back-button" asp-controller="Project" asp-action="index" asp-route-id="@Model.Project.Id">
            <div>
                <p>Cancel</p>
            </div>
        </a>
    </secion>
</section>


@section Scripts {
    <script src="~/js/createProject.js" asp-append-version="true"></script>
    <script src="~/js/previewImages.js" asp-append-version="true"></script>
}